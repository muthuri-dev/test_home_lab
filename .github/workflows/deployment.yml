name: Deploy to Production Cluster

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry using a Personal Access Token (PAT)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Build and push the Docker image with a unique version tag
      - name: Build and push Docker image with version tag
        id: build_image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:version-${{ github.run_number }}

      # Write the production kubeconfig file from the secret using printf
      - name: Set up kubectl with prod kubeconfig
        run: |
          # Write the kubeconfig file preserving newlines
          printf "%s" "${{ secrets.KUBECONFIG_PROD }}" > kubeconfig.yaml
          # Set the KUBECONFIG environment variable so kubectl uses this file
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          # Debug: Show the beginning and end of the kubeconfig file
          head -n 10 kubeconfig.yaml
          tail -n 10 kubeconfig.yaml
          # Debug: Verify the loaded configuration
          kubectl config view

      # (Optional) Test connectivity to the API server!!!!!
      - name: Test API connectivity
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          curl -k https://2.tcp.ngrok.io:17176/version

      # Update the Kubernetes deployment with the newly built image
      - name: Update Kubernetes deployment with new image
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl set image deployment/test-home-lab test_home_lab=ghcr.io/${{ github.repository }}:version-${{ github.run_number }} -n default
