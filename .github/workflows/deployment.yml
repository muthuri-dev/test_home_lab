name: Deploy to Production Cluster
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Output debug information
      - name: Debug information
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Actor: ${{ github.actor }}"

      # Log in to GitHub Container Registry using GITHUB_TOKEN
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Verify login worked
      - name: Verify GHCR login
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Set up Docker metadata
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=version-${{ github.run_number }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      # Build and push the Docker image with metadata!!!
      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=NestJS application for ${{ github.repository }}

      # Echo the image name for verification
      - name: Echo image name
        run: echo "Image name - ghcr.io/${{ github.repository }}:version-${{ github.run_number }}"

      # Set up kubectl with the production kubeconfig
      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG_PROD }}

      # Verify cluster connectivity
      - name: Verify cluster connectivity
        run: kubectl get nodes

      # Update the Kubernetes deployment with the newly built image
      - name: Update Kubernetes deployment with new image
        run: kubectl set image deployment/test-home-lab test-home-lab=ghcr.io/${{ github.repository }}:version-${{ github.run_number }} -n default

      # Verify deployment update
      - name: Verify deployment update
        run: kubectl rollout status deployment/test-home-lab -n default
